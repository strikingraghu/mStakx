8 >> Setup Prometheus (in monitoring namespace) for gathering host/container metrics along with health
check status of the application


Solution -

Create a file named clusterRole.yaml and copy the content of this file –> ClusterRole Config
https://raw.githubusercontent.com/bibinwilson/kubernetes-prometheus/master/clusterRole.yaml
kubectl create -f clusterRole.yaml



Create A Config Map
https://raw.githubusercontent.com/bibinwilson/kubernetes-prometheus/master/config-map.yaml
kubectl create -f config-map.yaml -n monitoring




Create A Prometheus Deployment

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.1.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          emptyDir: {}


Create a deployment on monitoring namespace using the above file
kubectl create  -f prometheus-deployment.yaml --namespace=monitoring



You can check the created deployment using the following command
kubectl get deployments --namespace=monitoring




Connecting To Prometheus
Using Kubectl port forwarding

Exposing the Prometheus deployment as a service with NodePort or a Load Balancer.

Using kubectl port forwarding, we can access the pod from your workstation using a selected port on our localhost.


1. First, get the Prometheus pod name
kubectl get pods --namespace=monitoring
The output will look like the following.
➜  kubectl get pods --namespace=monitoring
NAME                                     READY     STATUS    RESTARTS   AGE
prometheus-monitoring-3331088907-hm5n1   1/1       Running   0          5m



2. Execute the following command with your pod name to access Prometheus from localhost port 8080.
Note: Replace prometheus-monitoring-3331088907-hm5n1 with your pod name.
kubectl port-forward prometheus-monitoring-3331088907-hm5n1 8080:9090 -n monitoring


3. Now, if you access http://localhost:8080 on your browser, we will get the Prometheus home page.
